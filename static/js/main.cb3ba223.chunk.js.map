{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendListItem/FriendListItem.module.css","components/TransactionHistory/TransactionHistory.module.css","components/FriendList/FriendList.module.css","components/Section/Section.module.css","no-avatar.png","components/Profile/Profile.js","components/Section/Section.js","components/Statistics/Statistics.js","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","noAvatarImg","stats","className","styles","card","description","src","alt","listitem","label","quantity","followers","views","likes","Section","title","children","Statistics","getRandom","min","max","Math","floor","random","statistics","statList","map","item","randomColor","style","background","percentage","id","FriendListItem","isOnline","online","offline","width","FriendList","friends","friendList","friend","TransactionHistory","items","table","tablehead","tablerow","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,KAAO,sBAAsB,YAAc,6BAA6B,OAAS,wBAAwB,KAAO,sBAAsB,IAAM,qBAAqB,SAAW,0BAA0B,MAAQ,uBAAuB,SAAW,0BAA0B,MAAQ,uBAAuB,SAAW,4B,gBCAtUD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,0BAA0B,SAAW,6BAA6B,KAAO,2B,qPCA/ID,EAAOC,QAAU,CAAC,OAAS,+BAA+B,QAAU,gCAAgC,KAAO,+B,iBCA3GD,EAAOC,QAAU,CAAC,MAAQ,kCAAkC,UAAY,wC,iBCAxED,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,2B,4xFCArED,EAAOC,QAAU,CAAC,MAAQ,yB,+GCDX,MAA0B,sC,OCoD1BC,MA7Cf,YAOC,IANGC,EAMJ,EANIA,KACAC,EAKJ,EALIA,IACAC,EAIJ,EAJIA,SAIJ,IAHIC,cAGJ,MAHaC,EAGb,EAFIC,EAEJ,EAFIA,MAGA,OAAQ,sBAAKC,UAAWC,IAAOC,KAAvB,UACJ,sBAAKF,UAAWC,IAAOE,YAAvB,UACI,qBACIC,IAAKP,EACLQ,IAAI,gHACJL,UAAWC,IAAOJ,SAEtB,mBAAGG,UAAWC,IAAOP,KAArB,SAA4BA,IAC5B,mBAAGM,UAAWC,IAAON,IAArB,SAA2BA,IAC3B,mBAAGK,UAAWC,IAAOL,SAArB,SAAgCA,OAGpC,qBAAII,UAAWC,IAAOF,MAAtB,UACI,qBAAIC,UAAWC,IAAOK,SAAtB,UACI,sBAAMN,UAAWC,IAAOM,MAAxB,uBACA,sBAAMP,UAAWC,IAAOO,SAAxB,SAAmCT,EAAMU,eAE7C,qBAAIT,UAAWC,IAAOK,SAAtB,UACI,sBAAMN,UAAWC,IAAOM,MAAxB,mBACA,sBAAMP,UAAWC,IAAOO,SAAxB,SAAmCT,EAAMW,WAE7C,qBAAIV,UAAWC,IAAOK,SAAtB,UACI,sBAAMN,UAAWC,IAAOM,MAAxB,mBACA,sBAAMP,UAAWC,IAAOO,SAAxB,SAAmCT,EAAMY,kB,gDCtB1CC,MAZf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACtB,OAAO,gCACFD,GAAS,oBAAIb,UAAWC,IAAOY,MAAtB,SAA8BA,IACvCC,M,gBCuBMC,MA1Bf,YAAuC,IAAjBF,EAAgB,EAAhBA,MAAOd,EAAS,EAATA,MACnBiB,EAAY,SAACC,EAAKC,GACxB,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,GAAOA,IAEhD,OACI,0BAASjB,UAAWC,IAAOqB,WAA3B,UACI,oBAAItB,UAAWC,IAAOY,MAAtB,SAA8BA,IAC9B,oBAAIb,UAAWC,IAAOsB,SAAtB,SACKxB,EAAMyB,KAAI,SAAAC,GACP,IAAMC,EAAW,cAAUV,EAAU,EAAG,KAAvB,aAAgCA,EAAU,EAAG,KAA7C,aAAsDA,EAAU,EAAG,KAAnE,KACjB,OAAO,qBAAkBhB,UAAWC,IAAOwB,KAAME,MAAO,CAAEC,WAAYF,GAA/D,UACH,sBAAM1B,UAAWC,IAAOM,MAAxB,SAAgCkB,EAAKlB,QACrC,sBAAMP,UAAWC,IAAO4B,WAAxB,SAAqCJ,EAAKI,eAF9BJ,EAAKK,a,gCCM1BC,MAhBf,YAAmE,IAAD,IAAxClC,cAAwC,MAA/BC,EAA+B,EAAlBJ,EAAkB,EAAlBA,KAAMsC,EAAY,EAAZA,SAClD,OACI,gCACKA,EAAY,sBAAMhC,UAAWC,IAAOgC,SAAoB,sBAAMjC,UAAWC,IAAOiC,UACjF,qBAAKlC,UAAWC,IAAOJ,OAAQO,IAAKP,EAAQQ,IAAKX,EAAMyC,MAAM,OAC7D,mBAAGnC,UAAWC,IAAOP,KAArB,SAA6BA,QCkB1B0C,MAtBf,YAAkC,IAAZC,EAAW,EAAXA,QAClB,OACI,oBAAIrC,UAAWC,IAAOqC,WAAtB,SACKD,EAAQb,KAAI,SAAAe,GAAM,OACf,oBAAIvC,UAAWC,IAAOwB,KAAtB,SACI,cAAC,EAAD,CACI5B,OAAQ0C,EAAO1C,OACfH,KAAM6C,EAAO7C,KACbsC,SAAUO,EAAOP,YAJOO,EAAOT,U,gBC4BxCU,MAjCf,YAAwC,IAAVC,EAAS,EAATA,MAC1B,OACI,wBAAOzC,UAAWC,IAAOyC,MAAzB,UACI,uBAAO1C,UAAWC,IAAO0C,UAAzB,SACI,+BACI,sCACA,wCACA,+CAGR,gCACKF,EAAMjB,KAAI,SAAAC,GAAI,OACX,qBAAkBzB,UAAWC,IAAO2C,SAApC,UACI,6BAAKnB,EAAKoB,OACV,6BAAKpB,EAAKqB,SACV,6BAAKrB,EAAKsB,aAHLtB,EAAKK,aCNnB,SAASkB,IACtB,OACE,gCACE,cAAC,EAAD,CAASnC,MAAM,SAAf,SACE,cAAC,EAAD,CACEnB,KAAMuD,EAAKvD,KACXC,IAAKsD,EAAKtD,IACVC,SAAUqD,EAAKrD,SACfC,OAAQoD,EAAKpD,OACbE,MAAOkD,EAAKlD,UAGhB,eAAC,EAAD,CAASc,MAAM,SAAf,UACE,cAAC,EAAD,CACEA,MAAM,eACNd,MAAOmD,IAHX,OAOA,eAAC,EAAD,CAASrC,MAAM,SAAf,UACE,cAAC,EAAD,CAAYwB,QAASA,IADvB,OAKA,eAAC,EAAD,CAASxB,MAAM,SAAf,UACE,cAAC,EAAD,CAAoB4B,MAAOU,IAD7B,U,MC7BNC,IAASC,OAAO,cAAC,IAAMC,WAAP,UACd,cAACN,EAAD,MAEAO,SAASC,cAAc,Y","file":"static/js/main.cb3ba223.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Profile_card__ZKkbh\",\"description\":\"Profile_description__ymqdH\",\"avatar\":\"Profile_avatar__1MvAV\",\"name\":\"Profile_name__Zdd3V\",\"tag\":\"Profile_tag__1DHsI\",\"location\":\"Profile_location__2XXZe\",\"stats\":\"Profile_stats__3JosN\",\"listitem\":\"Profile_listitem__1C2xh\",\"label\":\"Profile_label__1L2KT\",\"quantity\":\"Profile_quantity__rAc8y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1k2Yq\",\"title\":\"Statistics_title__3wI1-\",\"statList\":\"Statistics_statList__6Djoo\",\"item\":\"Statistics_item__2XO7N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"online\":\"FriendListItem_online__33WVy\",\"offline\":\"FriendListItem_offline__3u0wa\",\"name\":\"FriendListItem_name__2qgIQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TransactionHistory_table__3HZb7\",\"tablehead\":\"TransactionHistory_tablehead__2Mouo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__YijXJ\",\"item\":\"FriendList_item__2dDT_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2vRwa\"};","export default __webpack_public_path__ + \"static/media/no-avatar.3410dcbb.png\";","import styles from './Profile.module.css'\r\nimport PropTypes from 'prop-types'\r\nimport noAvatarImg from '../../no-avatar.png'\r\n\r\n\r\n\r\n\r\nfunction Profile({\r\n    name,\r\n    tag,\r\n    location,\r\n    avatar = noAvatarImg,\r\n    stats\r\n})\r\n{\r\n    return (<div className={styles.card}>\r\n        <div className={styles.description}>\r\n            <img\r\n                src={avatar}\r\n                alt=\"Аватар пользователя\"\r\n                className={styles.avatar}\r\n            />\r\n            <p className={styles.name}>{name}</p>\r\n            <p className={styles.tag}>{tag}</p>\r\n            <p className={styles.location}>{location}</p>\r\n        </div>       \r\n\r\n        <ul className={styles.stats}>\r\n            <li className={styles.listitem}>\r\n                <span className={styles.label}>Followers</span>\r\n                <span className={styles.quantity}>{stats.followers}</span>\r\n            </li>\r\n            <li className={styles.listitem}>\r\n                <span className={styles.label}>Views</span>\r\n                <span className={styles.quantity}>{stats.views}</span>\r\n            </li>\r\n            <li className={styles.listitem}>\r\n                <span className={styles.label}>Likes</span>\r\n                <span className={styles.quantity}>{stats.likes}</span>\r\n            </li>\r\n        </ul>\r\n    </div>);\r\n}\r\n\r\nProfile.propTypes = {\r\n    name: PropTypes.string,\r\n    tag: PropTypes.string,\r\n    location: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n    stats: PropTypes.object,\r\n}\r\n\r\nexport default Profile","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css'\r\n\r\n\r\nfunction Section({ title, children }) {\r\n    return <div>\r\n        {title && <h2 className={styles.title}>{title}</h2>}\r\n        {children}\r\n    </div>;\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node,\r\n}\r\n\r\nexport default Section;","import PropTypes from 'prop-types'\r\nimport styles from './Statistics.module.css'\r\n\r\n \r\nfunction Statistics({ title, stats }) {\r\n    const getRandom = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min) + min);\r\n};\r\n    return (\r\n        <section className={styles.statistics}>\r\n            <h2 className={styles.title}>{title}</h2>\r\n            <ul className={styles.statList}>\r\n                {stats.map(item => {                    \r\n                    const randomColor = `rgb(${getRandom(0, 255)}, ${getRandom(0, 255)}, ${getRandom(0, 255)})`;                    \r\n                    return <li key={item.id} className={styles.item} style={{ background: randomColor}}>\r\n                        <span className={styles.label}>{item.label}</span>\r\n                        <span className={styles.percentage}>{item.percentage}</span>\r\n                    </li>\r\n                }\r\n                )}\r\n            </ul>\r\n        </section>);\r\n}\r\n\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types'\r\nimport styles from './FriendListItem.module.css'\r\nimport noAvatarImg from '../../no-avatar.png'\r\n\r\nfunction FriendListItem({ avatar = noAvatarImg, name, isOnline }) {\r\n    return (\r\n        <div>\r\n            {isOnline ? (<span className={styles.online}></span>) : (<span className={styles.offline}></span>)}\r\n            <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\r\n            <p className={styles.name}>{ name}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.bool.isRequired,    \r\n};\r\n\r\nexport default FriendListItem","import PropTypes from 'prop-types'\r\nimport styles from './FriendList.module.css'\r\nimport FriendListItem from '../FriendListItem/FriendListItem';\r\n\r\n\r\nfunction FriendList({ friends }) {\r\n    return (\r\n        <ul className={styles.friendList}>\r\n            {friends.map(friend =>\r\n                <li className={styles.item}key={friend.id}>\r\n                    <FriendListItem\r\n                        avatar={friend.avatar}\r\n                        name={friend.name}\r\n                        isOnline={friend.isOnline} />\r\n                </li>)}\r\n        </ul>\r\n    )\r\n}\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default FriendList;","import PropTypes from 'prop-types'\r\nimport styles from './TransactionHistory.module.css'\r\n\r\n\r\nfunction TransactionHistory({ items }) {\r\n    return (\r\n        <table className={styles.table}>\r\n            <thead className={styles.tablehead}>\r\n                <tr>\r\n                    <th>Type</th>\r\n                    <th>Amount</th>\r\n                    <th>Currency</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {items.map(item => (\r\n                    <tr key={item.id} className={styles.tablerow}>\r\n                        <td>{item.type}</td>\r\n                        <td>{item.amount}</td>\r\n                        <td>{item.currency}</td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>)\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\n\r\nexport default TransactionHistory","import Profile from \"./components/Profile/Profile\";\nimport user from './user.json';\nimport statisticalData from './statistical-data.json';\nimport transactions from './transactions.json';\nimport friends from './friends.json'\nimport Section from \"./components/Section/Section\";\nimport Statistics from './components/Statistics/Statistics'\nimport FriendList from './components/FriendList/FriendList'\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory'\n\nexport default function App() {\n  return (\n    <div>\n      <Section title=\"Task 1\">\n        <Profile\n          name={user.name}\n          tag={user.tag}\n          location={user.location}\n          avatar={user.avatar}\n          stats={user.stats}\n        />\n      </Section>\n      <Section title=\"Task 2\">\n        <Statistics\n          title=\"Upload stats\"\n          stats={statisticalData}          \n          />;\n\n      </Section>\n      <Section title=\"Task 3\">\n        <FriendList friends={friends}\n        />;\n      </Section>\n\n      <Section title=\"Task 4\">\n        <TransactionHistory items={transactions}          \n        />;\n      </Section>\n    </div>\n  );\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//=========== defaults =========================\n// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<React.StrictMode>\n  <App />\n</React.StrictMode>,\n  document.querySelector('#root')\n);\n\n\n\n\n\n\n\n\n\n\n\n// ============= defaults ======================\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}